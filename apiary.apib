FORMAT: 1A
HOST: http://dev2.letscaptivate.com/api

# Captivate API
Welcome to Captivate API.



# Users [/user]
In our Application all contacts are submitted by users. User can be *visitor*, *lead* or *user*

## User object
|Atrribute|Type|Description|
|:--------|----|-----------|
|user_id|string|The unique identifier for the user|
|app_id|App object|Link for application. Application ID.|
|owner_id|Admin object|The id of an admin that has been assigned account ownership of the contact.|
|acquired_at|datetime||
|company_ids|array||
|name|string|User name|
|owner_name|string|Owner name|
|pseudonym|string||
|display_as|string||
|email|string|User email|
|phone|string|User phone number|
|avatar|json||
|user_time|json||
|user_agent_data|json||
|last_heard_from_at|datetime||
|last_contacted_at|datetime||
|last_request_at|datetime||
|session_for_email_notification_started_at|datetime||
|last_request_at_ios|datetime||
|last_session_start|datetime||
|last_session_lasted|integer||
|last_seen_ip|string||
|remote_created_at|datetime||
|referral_url|string||
|session_count|integer||
|session_count_ios|integer||
|social_accounts|json||
|tag_ids|array||
|segment_ids|array||
|unsubscribed_from_emails|boolean||
|geoip_data|json||
|ios_app_name|string||
|ios_app_version|string||
|ios_device|string||
|ios_os_version|string||
|custom_data|json||
|android_app_name|string||
|android_app_version|string||
|android_device|string||
|android_os_version|string||
|browser_locale|string||
|language_override|string||
|last_request_at_android|string||
|session_count_android|integer||
|user_event_summaries|json||
|healthscore|integer||
|last_visited_url|string||
|has_device_token|string||
|role|string||
|enabled_push_messaging|boolean||
|is_mobile_unidentified|boolean||
|marked_email_as_spam|boolean||
|has_hard_bounce|boolean||
|last_email_opened_at|datetime||
|last_email_clicked_at|datetime||
|utm_campaign|string||
|utm_content|string||
|utm_medium|string||
|utm_source|string||
|utm_term|string||
|campaigns|array||
|conv_actions|json||
|link_clicks|json||
|camp_actions|json||

## List all users [GET]
You can fetch a list of all users.

+ Request (application/json)

    + Headers  
    
            x-Token: valid_access_token 
    
    + Body 
            
            {}

+ Response 200 (application/json)

    + Body 

            [   // user 1
                {
                    "app_id": "5c60465aef96db00109429f0",
                    "role": "user",
                    "custom_data": {},
                    "tag_ids": [
                      "5da9ddb2a4ce2d0010ad6f52"
                    ],
                    "email": "ktitorovk@gmail.com",
                    "name": "K Kostya",
                    "remote_created_at": "2019-01-03T12:50:00.000Z",
                    "user_event_summaries": {},
                    "user_id": null,
                    "acquired_at": null,
                    "company_ids": [
                      "5ddd668fd12b7f3820b1d281"
                    ],
                    "pseudonym": null,
                    "display_as": "K Kostya",
                    "phone": null,
                    "avatar": {
                        "initials": "KK",
                        "color": "#7d5d9e",
                        "image_urls": {
                            "mini": null,
                            "mini_x2": null,
                            "normal": null,
                            "normal_x2": null,
                            "large": null
                        },
                        "image_url": null
                    },
                    "user_time": {
                        "local_time": null,
                        "timezone": null,
                        "timezone_code": null,
                        "local_time_12h": null
                    },
                    "user_agent_data": {
                        "source": null,
                        "name": null,
                        "version": null,
                        "engine": null,
                        "engine_version": null,
                        "os": null,
                        "platform": null,
                        "mobile": "boolean"
                    },
                    "last_heard_from_at": null,
                    "last_contacted_at": null,
                    "last_request_at": null,
                    "last_request_at_ios": null,
                    "last_session_lasted": null,
                    "last_seen_ip": null,
                    "referral_url": null,
                    "session_count": null,
                    "session_count_ios": null,
                    "social_accounts": {},
                    "segment_ids": [
                        "5c60465aef96db00109429f6",
                        "5cee72af993ff0001032aa0d"
                    ],
                    "unsubscribed_from_emails": null,
                    "geoip_data": {
                        "city_name": null,
                        "continent_code": null,
                        "country_code2": null,
                        "country_code3": null,
                        "country_name": null,
                        "postal_code": null,
                        "region_code": null,
                        "region_name": null,
                        "timezone": null,
                        "latitude": null,
                        "longitude": null
                    },
                    "ios_app_name": null,
                    "ios_app_version": null,
                    "ios_device": null,
                    "ios_os_version": null,
                    "android_app_name": null,
                    "android_app_version": null,
                    "android_device": null,
                    "android_os_version": null,
                    "browser_locale": null,
                    "language_override": null,
                    "last_request_at_android": null,
                    "session_count_android": null,
                    "healthscore": null,
                    "last_visited_url": null,
                    "has_device_token": null,
                    "enabled_push_messaging": null,
                    "is_mobile_unidentified": null,
                    "marked_email_as_spam": null,
                    "has_hard_bounce": null,
                    "last_email_opened_at": null,
                    "last_email_clicked_at": null,
                    "utm_campaign": null,
                    "utm_content": null,
                    "utm_medium": null,
                    "utm_source": null,
                    "utm_term": null,
                    "created_at": "2019-10-18T15:43:47.726Z",
                    "updated_at": "2019-10-18T15:43:47.726Z",
                    "id": "5da9ddb3a4ce2d0010ad6f53",
                    "conversation_stats": {
                        "count": 76,
                        "count_opened": 76,
                        "count_close": 0
                    }
                },
                { // user 2
                    "app_id": "5c60465aef96db00109429f0",
                    "role": "user",
                    "custom_data": {},
                    "tag_ids": [
                        "5da9ddb2a4ce2d0010ad6f52"
                    ],
                    "email": "ktitorov@gmail.com",
                    "name": "Kostya",
                    "remote_created_at": "2019-01-03T12:50:00.000Z",
                    "user_event_summaries": {},
                    "user_id": null,
                    "acquired_at": null,
                    "company_ids": [
                        "5ddd668fd12b7f3820b1d281"
                    ],
                    "pseudonym": null,
                    "display_as": "Kostya",
                    "phone": null,
                    "avatar": {
                        "initials": "K",
                        "color": "#a2edb7",
                        "image_urls": {
                            "mini": null,
                            "mini_x2": null,
                            "normal": null,
                            "normal_x2": null,
                           "large": null
                        },
                        "image_url": null
                    },
                    "user_time": {
                        "local_time": null,
                        "timezone": null,
                        "timezone_code": null,
                        "local_time_12h": null
                    },
                    "user_agent_data": {
                        "source": null,
                        "name": null,
                        "version": null,
                        "engine": null,
                        "engine_version": null,
                        "os": null,
                        "platform": null,
                        "mobile": "boolean"
                    },
                    "last_heard_from_at": null,
                    "last_contacted_at": null,
                    "last_request_at": null,
                    "last_request_at_ios": null,
                    "last_session_lasted": null,
                    "last_seen_ip": null,
                    "referral_url": null,
                    "session_count": null,
                    "session_count_ios": null,
                    "social_accounts": {},
                    "segment_ids": [
                        "5c60465aef96db00109429f6",
                        "5cee72af993ff0001032aa0d"
                    ],
                    "unsubscribed_from_emails": null,
                    "geoip_data": {
                        "city_name": null,
                        "continent_code": null,
                        "country_code2": null,
                        "country_code3": null,
                        "country_name": null,
                        "postal_code": null,
                        "region_code": null,
                        "region_name": null,
                        "timezone": null,
                        "latitude": null,
                        "longitude": null
                    },
                    "ios_app_name": null,
                    "ios_app_version": null,
                    "ios_device": null,
                    "ios_os_version": null,
                    "android_app_name": null,
                    "android_app_version": null,
                    "android_device": null,
                    "android_os_version": null,
                    "browser_locale": null,
                    "language_override": null,
                    "last_request_at_android": null,
                    "session_count_android": null,
                    "healthscore": null,
                    "last_visited_url": null,
                    "has_device_token": null,
                    "enabled_push_messaging": null,
                    "is_mobile_unidentified": null,
                    "marked_email_as_spam": null,
                    "has_hard_bounce": null,
                    "last_email_opened_at": null,
                    "last_email_clicked_at": null,
                    "utm_campaign": null,
                    "utm_content": null,
                    "utm_medium": null,
                    "utm_source": null,
                    "utm_term": null,
                    "created_at": "2019-10-18T15:43:47.914Z",
                    "updated_at": "2019-10-18T15:43:47.914Z",
                    "id": "5da9ddb3a4ce2d0010ad6f56",
                    "conversation_stats": {
                        "count": 46,
                        "count_opened": 46,
                        "count_close": 0
                    }
                    // user 3 and so on
                }
            ]

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

## Search user [POST /user/search{?include_count,limit,skip,sort}]
You can search users, search criteria are predicates. 

+ Parameters

    + include_count: true (boolean, required)
    + limit: 25 (number, required)
    + skip: 0 (number, required)
    + sort: "last_request_at desc" (string, required)

+ Request (application/json)

    + Headers  
    
            x-Token: valid_access_token
    
    + Body 

            {
                "predicates": [
                    {
                        "type": "string",
                        "attribute": "role",
                        "comparison": "eq",
                        "value": "user",
                        "operator": "and",
                        "hyper_type": "string",
                        "notDraggable": true,
                        "iconClass": "users",
                        "attributeTitle": "User Type",
                        "attributeDescription": "",
                        "id": "5aacfffc47e952210d5806ec"
                    },
                    {
                        "type": "string",
                        "id": "586c13daf0d5dbce55c009fe",
                        "attribute": "geoip_data.city_name",
                        "operator": "and",
                        "attributeTitle": "City",
                        "attributeDescription": "The city a person is in (or their IP address location)",
                        "iconClass": "users",
                        "hyper_type": "string",
                        "comparison": "eq",
                        "value": "Moscow"
                    }
                    // More predicates
                ]
            }

+ Response 200 (application/json)

        [
            {
                "app_id": "5c60465aef96db00109429f0",
                "role": "user",
                "custom_data": {},
                "tag_ids": [
                    "5da9ddb2a4ce2d0010ad6f52"
                ],
                "email": "ktitorovk@gmail.com",
                "name": "K Kostya",
                "remote_created_at": "2019-01-03T12:50:00.000Z",
                "user_event_summaries": {},
                "user_id": null,
                "acquired_at": null,
                "company_ids": [
                    "5ddd668fd12b7f3820b1d281"
                ],
                "pseudonym": null,
                "display_as": "K Kostya",
                "phone": null,
                "avatar": {
                    "initials": "KK",
                    "color": "#7d5d9e",
                    "image_urls": {
                        "mini": null,
                        "mini_x2": null,
                        "normal": null,
                        "normal_x2": null,
                        "large": null
                    },
                    "image_url": null
                },
                "user_time": {
                    "local_time": null,
                    "timezone": null,
                    "timezone_code": null,
                    "local_time_12h": null
                },
                "user_agent_data": {
                    "source": null,
                    "name": null,
                    "version": null,
                    "engine": null,
                    "engine_version": null,
                    "os": null,
                    "platform": null,
                    "mobile": "boolean"
                },
                "last_heard_from_at": null,
                "last_contacted_at": null,
                "last_request_at": null,
                "last_request_at_ios": null,
                "last_session_lasted": null,
                "last_seen_ip": null,
                "referral_url": null,
                "session_count": null,
                "session_count_ios": null,
                "social_accounts": {},
                "segment_ids": [
                    "5c60465aef96db00109429f6",
                    "5cee72af993ff0001032aa0d"
                ],
                "unsubscribed_from_emails": null,
                "geoip_data": {
                    "city_name": null,
                    "continent_code": null,
                    "country_code2": null,
                    "country_code3": null,
                    "country_name": null,
                    "postal_code": null,
                    "region_code": null,
                    "region_name": null,
                    "timezone": null,
                    "latitude": null,
                    "longitude": null
                },
                "ios_app_name": null,
                "ios_app_version": null,
                "ios_device": null,
                "ios_os_version": null,
                "android_app_name": null,
                "android_app_version": null,
                "android_device": null,
                "android_os_version": null,
                "browser_locale": null,
                "language_override": null,
                "last_request_at_android": null,
                "session_count_android": null,
                "healthscore": null,
                "last_visited_url": null,
                "has_device_token": null,
                "enabled_push_messaging": null,
                "is_mobile_unidentified": null,
                "marked_email_as_spam": null,
                "has_hard_bounce": null,
                "last_email_opened_at": null,
                "last_email_clicked_at": null,
                "utm_campaign": null,
                "utm_content": null,
                "utm_medium": null,
                "utm_source": null,
                "utm_term": null,
                "created_at": "2019-10-18T15:43:47.726Z",
                "updated_at": "2019-10-18T15:43:47.726Z",
                "id": "5da9ddb3a4ce2d0010ad6f53"
            },
            {
                "app_id": "5c60465aef96db00109429f0",
                "role": "user",
                "custom_data": {},
                "tag_ids": [
                    "5da9ddb2a4ce2d0010ad6f52"
                ],
                "email": "ktitorov@gmail.com",
                "name": "Kostya",
                "remote_created_at": "2019-01-03T12:50:00.000Z",
                "user_event_summaries": {},
                "user_id": null,
                "acquired_at": null,
                "company_ids": [
                    "5ddd668fd12b7f3820b1d281"
                ],
                "pseudonym": null,
                "display_as": "Kostya",
                "phone": null,
                "avatar": {
                    "initials": "K",
                    "color": "#a2edb7",
                    "image_urls": {
                        "mini": null,
                        "mini_x2": null,
                        "normal": null,
                        "normal_x2": null,
                        "large": null
                    },
                    "image_url": null
                },
                "user_time": {
                    "local_time": null,
                    "timezone": null,
                    "timezone_code": null,
                    "local_time_12h": null
                },
                "user_agent_data": {
                    "source": null,
                    "name": null,
                    "version": null,
                    "engine": null,
                    "engine_version": null,
                    "os": null,
                    "platform": null,
                    "mobile": "boolean"
                },
                "last_heard_from_at": null,
                "last_contacted_at": null,
                "last_request_at": null,
                "last_request_at_ios": null,
                "last_session_lasted": null,
                "last_seen_ip": null,
                "referral_url": null,
                "session_count": null,
                "session_count_ios": null,
                "social_accounts": {},
                "segment_ids": [
                    "5c60465aef96db00109429f6",
                    "5cee72af993ff0001032aa0d"
                ],
                "unsubscribed_from_emails": null,
                "geoip_data": {
                    "city_name": null,
                    "continent_code": null,
                    "country_code2": null,
                    "country_code3": null,
                    "country_name": null,
                    "postal_code": null,
                    "region_code": null,
                    "region_name": null,
                    "timezone": null,
                    "latitude": null,
                    "longitude": null
                },
                "ios_app_name": null,
                "ios_app_version": null,
                "ios_device": null,
                "ios_os_version": null,
                "android_app_name": null,
                "android_app_version": null,
                "android_device": null,
                "android_os_version": null,
                "browser_locale": null,
                "language_override": null,
                "last_request_at_android": null,
                "session_count_android": null,
                "healthscore": null,
                "last_visited_url": null,
                "has_device_token": null,
                "enabled_push_messaging": null,
                "is_mobile_unidentified": null,
                "marked_email_as_spam": null,
                "has_hard_bounce": null,
                "last_email_opened_at": null,
                "last_email_clicked_at": null,
                "utm_campaign": null,
                "utm_content": null,
                "utm_medium": null,
                "utm_source": null,
                "utm_term": null,
                "created_at": "2019-10-18T15:43:47.914Z",
                "updated_at": "2019-10-18T15:43:47.914Z",
                "id": "5da9ddb3a4ce2d0010ad6f56"
            }
        ]

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

## Update user  [PUT /user/{id}]
You can update an user using user object attributes. 

+ Parameters 

    + id: "5c60465aef96db00109429ef" (string) - user id

+ Request (application/json)

    + Headers  
    
            x-Token: valid_access_token
    
    + Body 

            {
                "app_id": "5d7420cd9283e20020eb7ec6",
                "remote_created_at": "2020-03-08T17:48:07.317Z",
                "role": "user",
                "custom_data": {
                    "custom_field_1": "asfasdf",
                    "hobby": "collecting",
                    "custom_field_N": "dggidlsfgsdg"
                },
                "email": "ed.galstyan01@gmail.com",
                "user_id": "c46072c8f6e3168ed68928a8d8a4f8da",
                "acquired_at": null,
                "company_ids": [],
                "name": null,
                "owner_name": null,
                "pseudonym": null,
                "display_as": "ed.galstyan01@gmail.com",
                "phone": "jhbkjhb6123491234",
                "user_agent_data": {
                    "source": "Mozilla/5.0",
                    "name": "Chrome",
                    "version": "80.0.3987.132",
                    "engine": null,
                    "engine_version": null,
                    "os": "Windows 10",
                    "platform": "Windows",
                    "mobile": false
                },
                "last_heard_from_at": "2020-03-08T17:49:21.578Z",
                "last_contacted_at": "2020-03-09T09:44:36.388Z",
                "last_request_at": "2020-03-08T18:37:58.922Z",
                "last_request_at_ios": null,
                "last_session_lasted": 0,
                "last_seen_ip": "::ffff:37.252.92.184",
                "referral_url": null,
                "session_count": 4,
                "session_count_ios": null,
                "social_accounts": {},
                "tag_ids": [],
                "segment_ids": [
                    "5d7420cd9283e20020eb7ed0", 
                    "5d7420cd9283e20020eb7ed4"
                ],
                "unsubscribed_from_emails": null,
                "ios_app_name": null,
                "ios_app_version": null,
                "ios_device": null,
                "ios_os_version": null,
                "android_app_name": null,
                "android_app_version": null,
                "android_device": null,
                "android_os_version": null,
                "browser_locale": "en-US",
                "language_override": null,
                "last_request_at_android": null,
                "session_count_android": null,
                "user_event_summaries": {
                    "eventName": {
                        "first": "2020-03-08T17:48:55.793Z",
                        "last": "2020-03-08T17:48:55.793Z",
                        "count": 1,
                        "description": null
                    }
                },
                "healthscore": null,
                "last_visited_url": "http://camazonaws.com/widget/example.html?email=ed.galstyan01@gmail.com",
                "has_device_token": null,
                "enabled_push_messaging": null,
                "is_mobile_unidentified": null,
                "marked_email_as_spam": null,
                "has_hard_bounce": null,
                "last_email_opened_at": null,
                "last_email_clicked_at": null,
                "utm_campaign": null,
                "utm_content": null,
                "utm_medium": null,
                "utm_source": null,
                "utm_term": null,
                "geoip_data": {
                    "city_name": "Vanadzor",
                    "continent_code": "0",
                    "country_code": "AM",
                    "country_name": "AM",
                    "postal_code": null,
                    "region_code": null,
                    "region_name": "AS",
                    "timezone": "Asia/Yerevan",
                    "latitude": 40.8046,
                    "longitude": 44.4939
                },
                "avatar": {
                    "initials": null,
                    "color": "#a2edb7",
                    "image_urls": {
                        "mini": null,
                        "mini_x2": null,
                        "normal": null,
                        "normal_x2": null,
                        "large": null
                    },
                    "image_url": null
                },
                "user_time": {
                    "local_time": null,
                    "timezone": null,
                    "timezone_code": null,
                    "local_time_12h": null
                },
                "created_at": "2020-03-08T17:48:07.343Z",
                "updated_at": "2020-03-09T09:44:36.389Z",
                "id": "5e652fd7fd35e700111c877c",
                "url_visits": [
                    {
                        "page_url": "http://amazonaws.com/widget/example.html?email=ed.galstyan01@gmail.com",
                        "count": 5,
                        "first_visit_at": "2020-03-08T17:48:07.391Z",
                        "last_visit_at": "2020-03-08T17:48:29.061Z",
                        "id": "5e652fd7fd35e700111c8780"
                    }
                ]
            }

+ Response 200 (application/json)

        {
            "app_id": "5d7420cd9283e20020eb7ec6",
            "owner_id": null,
            "remote_created_at": "2020-03-08T17:48:07.317Z",
            "role": "user",
            "custom_data": {
                "custom_field_1": "asfasdf",
                "hobby": "collecting",
                "custom_field_N": "dggidlsfgsdg"
            },
            "email": "ed.galstyan01@gmail.com",
            "user_id": "c46072c8f6e3168ed68928a8d8a4f8da",
            "acquired_at": null,
            "company_ids": [],
            "name": null,
            "owner_name": null,
            "pseudonym": null,
            "display_as": "ed.galstyan01@gmail.com",
            "phone": "jhbkjhb6123491234",
            "user_agent_data": {
                "source": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36",
                "name": "Chrome",
                "version": "80.0.3987.132",
                "engine": null,
                "engine_version": null,
                "os": "Windows 10",
                "platform": "Windows",
                "mobile": false
            },
            "last_heard_from_at": "2020-03-08T17:49:21.578Z",
            "last_contacted_at": "2020-03-09T09:44:36.388Z",
            "last_request_at": "2020-03-08T18:37:58.922Z",
            "last_request_at_ios": null,
            "last_session_lasted": 0,
            "last_seen_ip": "::ffff:37.252.92.184",
            "referral_url": null,
            "session_count": 4,
            "session_count_ios": null,
            "social_accounts": {},
            "tag_ids": [],
            "segment_ids": [
                "5d7420cd9283e20020eb7ed0",
                "5d7420cd9283e20020eb7ed4"
            ],
            "unsubscribed_from_emails": null,
            "ios_app_name": null,
            "ios_app_version": null,
            "ios_device": null,
            "ios_os_version": null,
            "android_app_name": null,
            "android_app_version": null,
            "android_device": null,
            "android_os_version": null,
            "browser_locale": "en-US",
            "language_override": null,
            "last_request_at_android": null,
            "session_count_android": null,
            "user_event_summaries": {
                "eventName": {
                    "first": "2020-03-08T17:48:55.793Z",
                    "last": "2020-03-08T17:48:55.793Z",
                    "count": 1,
                    "description": null
                }
            },
            "healthscore": null,
            "last_visited_url": "http://c-static-testing.s3-website-us-east-1.amazonaws.com/widget/example.html?email=ed.galstyan01@gmail.com",
            "has_device_token": null,
            "enabled_push_messaging": null,
            "is_mobile_unidentified": null,
            "marked_email_as_spam": null,
            "has_hard_bounce": null,
            "last_email_opened_at": null,
            "last_email_clicked_at": null,
            "utm_campaign": null,
            "utm_content": null,
            "utm_medium": null,
            "utm_source": null,
            "utm_term": null,
            "geoip_data": {
                "city_name": "Vanadzor",
                "continent_code": "0",
                "country_code": "AM",
                "country_name": "AM",
                "postal_code": null,
                "region_code": null,
                "region_name": "AS",
                "timezone": "Asia/Yerevan",
                "latitude": 40.8046,
                "longitude": 44.4939
            },
            "avatar": {
                "initials": null,
                "color": "#a2edb7",
                "image_urls": {
                    "mini": null,
                    "mini_x2": null,
                    "normal": null,
                    "normal_x2": null,
                    "large": null
                },
                "image_url": null
            },
            "user_time": {
                "local_time": null,
                "timezone": null,
                "timezone_code": null,
                "local_time_12h": null
            },
            "created_at": "2020-03-08T17:48:07.343Z",
            "updated_at": "2020-03-13T14:07:12.015Z",
            "id": "5e652fd7fd35e700111c877c"
        }

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

+ Response 404 (application/json)

        {
            "message": "Not Found",
            "raw_message": "User/Visitor not found",
            "error_type": "not_found"
        }

## Update user name [PUT /user/{id}/update_name]
You can change user name.

+ Parameters

    + id: "5c60465aef96db00109429ef" (string) - user id

+ Request (application/json)

    + Headers  
    
            x-Token: valid_access_token
    
    + Body 

            {
                "new_name": "new name" 
            }

+ Response 200 (application/json)

        {
            "status": "ok"
        }

+ Response 400 (application/json)

        {
            "message": "Invalid request",
            "raw_message": "missing new_name field from body",
            "error_type": "invalid_request"
        }

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

+ Response 404 (application/json)

        {
            "message": "Not Found",
            "raw_message": "Not Found",
            "error_type": "not_found"
        }

## Add tag user  [PUT /user/{id}/add_tag]
You can add tag to an user.

+ Parameters 

    + id (string, optional) - user ID

+ Request (application/json)

    + Headers  
    
            x-Token: "valid_access_token"

    + Body 

            {
                "tag": "tag id"
            }

+ Response 200 (application/json)

        {
            "n": 1,
            "nModified": 1,
            "opTime": {
                "ts": "6804844745244803073",
                "t": 33
            },
            "electionId": "7fffffff0000000000000021",
            "ok": 1,
            "$clusterTime": {
                "clusterTime": "6804844745244803073",
                "signature": {
                    "hash": "AsHiIGDYXl27RwwG6/0tSU6UBkA=",
                    "keyId": "6759628484898717698"
                }
            },
            "operationTime": "6804844745244803073"
        }

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

## Update user tags  [POST /user/update_tags]
You can change tags of user.

+ Request (application/json)

    + Headers  
    
            x-Token: valid_access_token
    
    + Body 

            {
                "id": "569d36d20691ee79dd000591",
                "tag_ids": [
                            "569d36d20691ee79dd000591",
                            "569d36d20691ee79dd000592"
                           ]
            }

+ Response 200 (application/json)

    + Body 

            {
                "role": "user",
                "app_id": "5c60465aef96db00109429f0",
                "custom_data": {},
                "tag_ids": [
                    "5d1228d88100ad001072e3ea",
                    "5da9ddb2a4ce2d0010ad6f52"
                ],
                "email": "ktitorovk@gmail.com",
                "name": "new name",
                "remote_created_at": "2019-01-03T12:50:00.000Z",
                "user_event_summaries": {},
                "user_id": null,
                "acquired_at": null,
                "company_ids": [
                    "5ddd668fd12b7f3820b1d281"
                ],
                "pseudonym": null,
                "display_as": "new name",
                "phone": null,
                "avatar": {
                    "initials": "KK",
                    "color": "#7d5d9e",
                    "image_urls": {
                        "mini": null,
                        "mini_x2": null,
                        "normal": null,
                        "normal_x2": null,
                        "large": null
                    },
                    "image_url": null
                },
                "user_time": {
                    "local_time": null,
                    "timezone": null,
                    "timezone_code": null,
                    "local_time_12h": null
                },
                "user_agent_data": {
                    "source": null,
                    "name": null,
                    "version": null,
                    "engine": null,
                    "engine_version": null,
                    "os": null,
                    "platform": null,
                    "mobile": "boolean"
                },
                "last_heard_from_at": null,
                "last_contacted_at": null,
                "last_request_at": null,
                "last_request_at_ios": null,
                "last_session_lasted": null,
                "last_seen_ip": null,
                "referral_url": null,
                "session_count": null,
                "session_count_ios": null,
                "social_accounts": {},
                "segment_ids": [
                    "5c60465aef96db00109429f6",
                    "5cee72af993ff0001032aa0d"
                ],
                "unsubscribed_from_emails": null,
                "geoip_data": {
                    "city_name": null,
                    "continent_code": null,
                    "country_code2": null,
                    "country_code3": null,
                    "country_name": null,
                    "postal_code": null,
                    "region_code": null,
                    "region_name": null,
                    "timezone": null,
                    "latitude": null,
                    "longitude": null
                },
                "ios_app_name": null,
                "ios_app_version": null,
                "ios_device": null,
                "ios_os_version": null,
                "android_app_name": null,
                "android_app_version": null,
                "android_device": null,
                "android_os_version": null,
                "browser_locale": null,
                "language_override": null,
                "last_request_at_android": null,
                "session_count_android": null,
                "healthscore": null,
                "last_visited_url": null,
                "has_device_token": null,
                "enabled_push_messaging": null,
                "is_mobile_unidentified": null,
                "marked_email_as_spam": null,
                "has_hard_bounce": null,
                "last_email_opened_at": null,
                "last_email_clicked_at": null,
                "utm_campaign": null,
                "utm_content": null,
                "utm_medium": null,
                "utm_source": null,
                "utm_term": null,
                "created_at": "2019-10-18T15:43:47.726Z",
                "updated_at": "2020-03-17T07:55:04.401Z",
                "id": "5da9ddb3a4ce2d0010ad6f53"
            }

+ Response 400 (application/json)

        {
            "raw_message": "tag_ids should be an array",
            "attr": "tag_ids",
            "error_type": "invalid_request",
            "message": "Invalid request"
        }

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

## User bulk tag [POST /user/bulk_tag]
You can add a tag for users which are fitted for search criteria in predicates or are fitted for user id's in included_ids.
*predicates* are used if *included_ids* is empty.  

+ Request (application/json)

    + Attributes
        + tag_name (string, required) - Name of the tag
        + predicates (array) - List of search criteria for users, using if INCLUDED_IDS is empty
        + included_ids (array) - List IDs of updating users

    + Headers  
    
            x-Token: valid_access_token
    
    + Body 

            {
                "tag_name": "Test tag",
                "predicates": [],
                "included_ids": [
                    "569d36d20691ee79dd000591",
                    "569d36d20691ee79dd000592"
                ]
            }

+ Response 200 (application/json)

    + Attributes
        + name (string) - Name of the tag
        + app_id (string) - Current app id
        + created_at (string) - Date of the tag creation
        + id (string) - Tag ID

    + Body

            {
                "name": "123",
                "app_id": "5c60465aef96db00109429f0",
                "created_at": "2020-03-12T15:50:41.248Z",
                "id": "5e6a5a5182a68800115c782b"
            }

+ Response 400 (application/json)

        {
            "attr": "tag_name",
            "error_type": "invalid_request",
            "message": "Invalid request"
        }

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

## User bulk tags [POST /user/bulk_tags]
Yo can add or delete tags from users which are fitted for search criteria in predicates or are fitted for user id's in included_ids.
*predicates* are used if *included_ids* is empty.

+ Request (application/json)

    + Attributes
        + action (string, required) - "add" for adding tags, "delete" for deleting tags from users
        + tag_ids (array, required) - List of tags ID
        + predicates (array) - List of search criteria for users, using if INCLUDED_IDS is empty
        + included_ids (array) - List IDs of updating users
        
    + Headers  
    
            x-Token: valid_access_token
    
    + Body 

            {
                "action": "add", 
                "tag_ids": ["tag1_id", "tag2_id"],
                "predicates": [],
                "included_ids": [
                                "569d36d20691ee79dd000591",
                                "569d36d20691ee79dd000592"
                                ]
            }

+ Response 200 (application/json)

        {
            "status": "ok"
        }

+ Response 400 (application/json)

        {
            "message": "Invalid request",
            "raw_message": "Predicates required",
            "error_type": "invalid_request"
        }

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

+ Response 404 (application/json)

        {
            "message": "Not Found",
            "raw_message": "Not found users",
            "error_type": "not_found"
        }

## User bulk message [POST /user/bulk_message]
You can send manual message to selected users which id's are in included_ids.
The message will be visible in the manual message list.

+ Request (application/json)

    + Headers  
    
            x-Token: valid_access_token
    
    + Body 

            {
                "included_ids": [
                    "user1_id",
                    ...,
                    "userN_id"
                ],
                "blocks": [
                    {
                        "type": "paragraph",
                        "text": "hello"
                    }
                ],
                "subject": null,
                "type": "in-app",
                "message_style": "chat",
                "delivery_option": "full",
                "email_style": null
            }

+ Response 200 (application/json)

    + Body 

            {
                "status": "ok"
            }

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

## Destroy user [PUT /user/{id}/destroy]
You can delete user from application. Allowed for Admins with permission **can_delete_users**.

+ Parameters 

    + id (string, optional) - user ID

+ Request (application/json)

    + Headers  
    
            x-Token: valid_access_token
    
    + Body 
            
            {}

+ Response 200 (application/json)

        {
            "status": "ok"
        }

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

+ Response 403 (application/json)

        {
            "message": "Forbidden",
            "raw_message": "forbidden",
            "error_type": "forbidden"
        }

+ Response 404 (application/json)

        {
            "message": "Not Found",
            "raw_message": "Not found user",
            "error_type": "not_found"
        }

## Bulk delete users [POST /user/bulk_delete]
You can delete users from application. Allowed for Admins with permission **can_delete_users**.

+ Request (application/json)

    + Attributes
        + predicates (array) - List of search criteria for users, using if INCLUDED_IDS is empty
        + included_ids (array) - List IDs of deleting users   
    
    + Headers  
    
            x-Token: valid_access_token
    
    + Body 

            {
                "included_ids": [
                    "user1_id", 
                    "userN_id"
                ],
                "predicates": []
            }

+ Response 200 (application/json)

        {
            "status": "ok"
        }

+ Response 400 (application/json)

        {
            "message": "Invalid request",
            "raw_message": "Predicates or included_ids should be required",
            "error_type": "invalid_request"
        }

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

## Unsubscribe user [PUT /user/{id}/unsubscribe]
You can unsubscribe user from mailing.

+ Parameters 

    + id (string, optional) - user ID

+ Request (application/json)

    + Headers  
    
            x-Token: valid_access_token
    
    + Body 
            
            {}

+ Response 200 (application/json)

        {
            "status": "ok"
        }

+ Response 400 (application/json)

        {
            "message": "Invalid request",
            "raw_message": "Id should be required",
            "error_type": "invalid_request"
        }

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

+ Response 404 (application/json)

        {
            "message": "Not Found",
            "raw_message": "Not found user",
            "error_type": "not_found"
        }

## Resubscribe user [PUT /user/{id}/resubscribe]
You can resubcribe user on mailing.

+ Parameters 

    + id (string, optional) - user ID

+ Request (application/json)

    + Headers  
    
            x-Token: valid_access_token
    
    + Body 
            
            {}

+ Response 200 (application/json)

        {
            "status": "ok"
        }

+ Response 400 (application/json)

        {
            "message": "Invalid request",
            "raw_message": "Id should be required",
            "error_type": "invalid_request"
        }

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

+ Response 404 (application/json)

        {
            "message": "Not Found",
            "raw_message": "Not found user",
            "error_type": "not_found"
        }

## Bulk unsubscribe users [POST /user/bulk_unsubscribe]
You can unsubscribe users from mailing. 

+ Request (application/json)

    + Attributes
        + predicates (array) - List of search criteria for users, using if INCLUDED_IDS is empty
        + included_ids (array) - List IDs of unsubscribing users   
    
    + Headers  
    
            x-Token: valid_access_token
    
    + Body 

            {
                "included_ids": [
                    "user1_id", 
                    "userN_id"
                ],
                "predicates": []
            }

+ Response 200 (application/json)

        {
            "status": "ok"
        }

+ Response 400 (application/json)

        {
            "message": "Invalid request",
            "raw_message": "Predicates or included_ids should be required",
            "error_type": "invalid_request"
        }

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

## Bulk resubcribe users [POST /user/bulk_resubscribe]
You can resubscribe users on mailing.

+ Request (application/json)

    + Attributes
        + predicates (array) - List of search criteria for users, using if INCLUDED_IDS is empty
        + included_ids (array) - List IDs of unsubscribing users   
    
    + Headers  
    
            x-Token: valid_access_token
    
    + Body 

            {
                "included_ids": [
                    "user1_id", 
                    "userN_id"
                ],
                "predicates": []
            }

+ Response 200 (application/json)

        {
            "status": "ok"
        }

+ Response 400 (application/json)

        {
            "message": "Invalid request",
            "raw_message": "Predicates or included_ids should be required",
            "error_type": "invalid_request"
        }

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

## Block user [PUT /user/{id}/block]
You can block user.

+ Parameters 

    + id (string, optional) - user ID

+ Request (application/json)

    + Headers  
    
            x-Token: valid_access_token
    
    + Body 
            
            {}

+ Response 200 (application/json)

        {
            "status": "ok"
        }

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

## Bulk block users [POST /user/bulk_block]
You can block users.

+ Request (application/json)

    + Attributes
        + predicates (array) - List of search criteria for users, using if INCLUDED_IDS is empty
        + included_ids (array) - List IDs of unsubscribing users   
    
    + Headers  
    
            x-Token: valid_access_token
    
    + Body 

            {
                "included_ids": [
                    "user1_id", 
                    "userN_id"
                ],
                "predicates": []
            }

+ Response 200 (application/json)

        {
            "status": "ok"
        }

+ Response 400 (application/json)

        {
            "message": "Invalid request",
            "raw_message": "Predicates or included_ids should be required",
            "error_type": "invalid_request"
        }

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

## Export user info [GET /user/{id}/export_info]
Job with type - **export_user_info** for an user creating

+ Parameters

    + id (string, optional) - User ID

+ Request (application/json)

    + Headers

            x-Token: valid_access_token
    
    + Body
    
            {}

+ Response 200 (application/json)

        {
            "status": "ok"
        }

+ Response 400 (application/json)

        {
            "message": "Invalid request",
            "raw_message": "Id should be required",
            "error_type": "invalid_request"
        }

+ Response 401 (application/json)

        {
            "message": "Unauthorized"
        }

+ Response 404 (application/json)

        {
            "message": "Not Found",
            "raw_message": "Not found user",
            "error_type": "not_found"
        }

## Get online users [GET /user/online_users]
You can find online user at the current moment

+ Request (application/json)

    + Headers

            x-Token: valid_access_token
    
    + Body
    
            {}

+ Response 200 (application/json)
    
        {}

## Get admins of app [GET /user/get_app_admins]
You can get list of admins of current application.

+ Request (application/json)

    + Headers

            x-Token: valid_access_token
    
    + Body
    
            {}

+ Response 200 (application/json)
    
        {}